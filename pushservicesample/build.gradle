plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
}

android {

    compileSdk 33
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 33
        buildConfigField "boolean", "GameApp", "false"
        applicationId "im.zgr.pushservice.sample"
        versionName "2.0.22"
        versionCode 2022
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions = ["services", "ui"]
    productFlavors {
        google { dimension "services" }
        huawei { dimension "services" }
        rustore { dimension "services" }
        xml { dimension "ui" } // версия на основе XML
        cmp { dimension "ui" } // версия на основе Compose (экспериментальная)
    }

    project.ext.flavourInfo = getGradle()
        .getStartParameter().getTaskRequests().toString()

    if (flavourInfo.contains("Google")) {
        apply plugin: 'com.google.gms.google-services'
        apply plugin: 'com.google.firebase.crashlytics'
    }

    if (flavourInfo.contains("Huawei")) {
        apply plugin: 'com.huawei.agconnect'
    }

    if (flavourInfo.contains("Cmp")) {
        composeOptions { kotlinCompilerExtensionVersion = "1.4.0" }
        buildFeatures { compose true }
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }


    buildFeatures {
        viewBinding true
    }

    namespace 'im.zgr.pushservice.application'

    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {

    ///////////////////////////////////////////////////////////////////////////////////
    // #1: зависимости для работы push-сообщений

    if (project.sourcesLocal) {
        implementation project(path: ':pushservice')
    } else {
        googleImplementation("com.zagruzka:pushservice-google:$project.sourcesVerName")
        huaweiImplementation("com.zagruzka:pushservice-huawei:$project.sourcesVerName")
        rustoreImplementation("com.zagruzka:pushservice-rustore:$project.sourcesVerName")
    }

    ///////////////////////////////////////////////////////////////////////////////////
    // #2: зависимости для работы com.zagruzka:pushservice

    // Hilt
    implementation "com.google.dagger:hilt-android:$hiltAndroid"
    kapt "com.google.dagger:hilt-android-compiler:$hiltAndroid"

    // UI
    implementation 'com.google.android.material:material:1.9.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleKtx"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleKtx"
    implementation("androidx.navigation:navigation-fragment-ktx:$navigation")
    implementation("androidx.navigation:navigation-ui-ktx:$navigation")

    // Extra
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation "ru.tinkoff.decoro:decoro:1.1.1"
    implementation 'joda-time:joda-time:2.9.4'

    ///////////////////////////////////////////////////////////////////////////////////
    // #3: зависимости для работы приложения

    // Retrofit
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.google.code.gson:gson:2.9.0'

    // ruStore services
    rustoreImplementation "ru.rustore.sdk:pushclient:$rustore"
    // huawei services
    huaweiImplementation 'com.huawei.hms:push:6.3.0.304'
    huaweiImplementation 'com.huawei.agconnect:agconnect-core:1.5.2.300'
    // google services
    googleImplementation platform("com.google.firebase:firebase-bom:$bom")
    googleImplementation 'com.google.firebase:firebase-messaging'

//    api files("libs\\YouTubeAndroidPlayerApi.jar")

    ///////////////////////////////////////////////////////////////////////////////////
    // #4: зависимости для работы compose (если используется)

    cmpImplementation platform('androidx.compose:compose-bom:2023.06.00')

    // Choose one of the following:
    // Material Design 3
    cmpImplementation 'androidx.compose.material3:material3'
    // or Material Design 2
    cmpImplementation 'androidx.compose.material:material'
    // or skip Material Design and build directly on top of foundational components
    cmpImplementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    cmpImplementation 'androidx.compose.ui:ui'

    // Android Studio Preview support
    cmpImplementation 'androidx.compose.ui:ui-tooling-preview'
    cmpImplementation 'androidx.compose.ui:ui-tooling'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    cmpImplementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    cmpImplementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    cmpImplementation 'androidx.compose.material3:material3-window-size-class'

    // Optional - Integration with activities
    cmpImplementation 'androidx.activity:activity-compose'
    // Optional - Integration with ViewModels
    cmpImplementation 'androidx.lifecycle:lifecycle-viewmodel-compose'
    // Optional - Integration with LiveData
    cmpImplementation 'androidx.compose.runtime:runtime-livedata'
    // Optional - Integration with RxJava
    cmpImplementation 'androidx.compose.runtime:runtime-rxjava2'

}

// rm -rf ~/.gradle/caches/



